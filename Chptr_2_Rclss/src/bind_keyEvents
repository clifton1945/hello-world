/**
 *  handleKeyPresses()
 *  160825  @1610 REFACT handleKeyPresses WAS bindHandlers
 * FILE:: bind_keyEvents.js  [some event ->  scrolls | reads | selects  the next or last verse]
 */

"use strict";
var assert = require('assert');
var R = require('ramda');


/**
 *      ----- handleKeyPresses:: (a key event) -> N:: (+1||-1) value
 *      USED to increment the beginning of current Rclss DIV children
 * @constructor
 */
var _handleKeyPresses = function handleKeyPresses() {
    // KEY Events ************************

    //document.addEventListener("keydown", keysPressed, false);
    document.addEventListener("keyup", keyActions, false);
    var ret = 0;

    function keyActions(e) {
        var V_Grp_NL;
        // read Last Chapter
        if (e.keyCode == 37) {
            //e.stopPropagation();
            e.preventDefault();
            C_Both("read Last Chptr");
            // READ_Last(C_Grp_NL);
        }
        // read Last verse.
        if (e.keyCode == 38) {
            //e.stopPropagation();
            e.preventDefault();
            C_Both("read Last Verse");
            ret = -1;

            // V_Grp_NL = GET_V_Grp_NL(book);
            // READ_Last(V_Grp_NL);
        }
        // read Next Chptr.
        if (e.keyCode == 39 || e.keyCode == 96) { // rt arrow || numpad 0
            //e.stopPropagation();
            e.preventDefault();
            C_Both("read Next Chptr ");
            // READ_Next(C_Grp_NL);
        }
        // read Next verse.
        if (e.keyCode == 32 || e.keyCode == 40) {
            //e.stopPropagation();
            e.preventDefault();
            C_Both("read Next Verse");
            ret = 1;
            // V_Grp_NL = GET_V_Grp_NL(book);
            // READ_Next(V_Grp_NL);
        }
        return ret
    }
};
exports.handleKeyPresses = _handleKeyPresses;


// click Events **********************
// DEPR use of book till need CLICK EVENTS var BindHandlers = function BindHandlers(book)
//     var selectedRange = null;
//     var getSelectedRange = function () {
//         try {
//             if (window.getSelection) {
//                 selectedRange = window.getSelection().getRangeAt(0);
//             } else {
//                 selectedRange = document.getSelection().getRangeAt(0);
//             }
//         } catch (err) {
//         }
//         //console.log('selectedRange:' + selectedRange.toString());
//     };
//     // add event listener to table
//     let b = document.querySelector('.book');
//     b.addEventListener("click",
//         () => {
//             getSelectedRange();
//             let el = document.querySelector('#result');
//             el.textContent= selectedRange.toString();
//             console.log(`textContent:${el.textContent}`);
//         },false
//     );
// };

